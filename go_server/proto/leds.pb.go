// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.4
// source: leds.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Animation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId          string     `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Name              string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pause             int32      `protobuf:"varint,3,opt,name=pause,proto3" json:"pause,omitempty"`
	Colours           []*RGB     `protobuf:"bytes,4,rep,name=colours,proto3" json:"colours,omitempty"`
	Meta              []*RowMeta `protobuf:"bytes,5,rep,name=meta,proto3" json:"meta,omitempty"`
	UpON              []*Step    `protobuf:"bytes,6,rep,name=upON,proto3" json:"upON,omitempty"`
	UpOFF             []*Step    `protobuf:"bytes,7,rep,name=upOFF,proto3" json:"upOFF,omitempty"`
	DownON            []*Step    `protobuf:"bytes,8,rep,name=downON,proto3" json:"downON,omitempty"`
	DownOFF           []*Step    `protobuf:"bytes,9,rep,name=downOFF,proto3" json:"downOFF,omitempty"`
	AnimationDuration int32      `protobuf:"varint,10,opt,name=animationDuration,proto3" json:"animationDuration,omitempty"`
	OnTime            int32      `protobuf:"varint,11,opt,name=onTime,proto3" json:"onTime,omitempty"`
	New               bool       `protobuf:"varint,12,opt,name=new,proto3" json:"new,omitempty"`
	Rows              int32      `protobuf:"varint,13,opt,name=rows,proto3" json:"rows,omitempty"`
	LedsPerRow        int32      `protobuf:"varint,14,opt,name=ledsPerRow,proto3" json:"ledsPerRow,omitempty"`
}

func (x *Animation) Reset() {
	*x = Animation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Animation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Animation) ProtoMessage() {}

func (x *Animation) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Animation.ProtoReflect.Descriptor instead.
func (*Animation) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{0}
}

func (x *Animation) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Animation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Animation) GetPause() int32 {
	if x != nil {
		return x.Pause
	}
	return 0
}

func (x *Animation) GetColours() []*RGB {
	if x != nil {
		return x.Colours
	}
	return nil
}

func (x *Animation) GetMeta() []*RowMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Animation) GetUpON() []*Step {
	if x != nil {
		return x.UpON
	}
	return nil
}

func (x *Animation) GetUpOFF() []*Step {
	if x != nil {
		return x.UpOFF
	}
	return nil
}

func (x *Animation) GetDownON() []*Step {
	if x != nil {
		return x.DownON
	}
	return nil
}

func (x *Animation) GetDownOFF() []*Step {
	if x != nil {
		return x.DownOFF
	}
	return nil
}

func (x *Animation) GetAnimationDuration() int32 {
	if x != nil {
		return x.AnimationDuration
	}
	return 0
}

func (x *Animation) GetOnTime() int32 {
	if x != nil {
		return x.OnTime
	}
	return 0
}

func (x *Animation) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *Animation) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *Animation) GetLedsPerRow() int32 {
	if x != nil {
		return x.LedsPerRow
	}
	return 0
}

type RegisterAnimationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegisterAnimationResponse) Reset() {
	*x = RegisterAnimationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAnimationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAnimationResponse) ProtoMessage() {}

func (x *RegisterAnimationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAnimationResponse.ProtoReflect.Descriptor instead.
func (*RegisterAnimationResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAnimationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAnimationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	User     string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetAnimationRequest) Reset() {
	*x = GetAnimationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimationRequest) ProtoMessage() {}

func (x *GetAnimationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimationRequest.ProtoReflect.Descriptor instead.
func (*GetAnimationRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{2}
}

func (x *GetAnimationRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetAnimationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetAnimationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    string     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Animation *Animation `protobuf:"bytes,2,opt,name=animation,proto3" json:"animation,omitempty"`
}

func (x *GetAnimationResponse) Reset() {
	*x = GetAnimationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimationResponse) ProtoMessage() {}

func (x *GetAnimationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimationResponse.ProtoReflect.Descriptor instead.
func (*GetAnimationResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{3}
}

func (x *GetAnimationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAnimationResponse) GetAnimation() *Animation {
	if x != nil {
		return x.Animation
	}
	return nil
}

type Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionColour []*PositionColour `protobuf:"bytes,1,rep,name=positionColour,proto3" json:"positionColour,omitempty"`
}

func (x *Step) Reset() {
	*x = Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{4}
}

func (x *Step) GetPositionColour() []*PositionColour {
	if x != nil {
		return x.PositionColour
	}
	return nil
}

type PositionColour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	Colour   int32 `protobuf:"varint,2,opt,name=colour,proto3" json:"colour,omitempty"`
}

func (x *PositionColour) Reset() {
	*x = PositionColour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionColour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionColour) ProtoMessage() {}

func (x *PositionColour) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionColour.ProtoReflect.Descriptor instead.
func (*PositionColour) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{5}
}

func (x *PositionColour) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *PositionColour) GetColour() int32 {
	if x != nil {
		return x.Colour
	}
	return 0
}

type RowMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row       int32  `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *RowMeta) Reset() {
	*x = RowMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowMeta) ProtoMessage() {}

func (x *RowMeta) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowMeta.ProtoReflect.Descriptor instead.
func (*RowMeta) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{6}
}

func (x *RowMeta) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *RowMeta) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type RGB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red   int32 `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	Green int32 `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue  int32 `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
}

func (x *RGB) Reset() {
	*x = RGB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RGB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RGB) ProtoMessage() {}

func (x *RGB) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RGB.ProtoReflect.Descriptor instead.
func (*RGB) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{7}
}

func (x *RGB) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *RGB) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *RGB) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

type RBPairingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ip                string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Status            string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	DeviceId          string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	TimestampRecieved int64  `protobuf:"varint,5,opt,name=timestampRecieved,proto3" json:"timestampRecieved,omitempty"`
	TimestampPending  int64  `protobuf:"varint,6,opt,name=timestampPending,proto3" json:"timestampPending,omitempty"`
	Rows              int32  `protobuf:"varint,7,opt,name=rows,proto3" json:"rows,omitempty"`
	LedsPerRow        int32  `protobuf:"varint,8,opt,name=ledsPerRow,proto3" json:"ledsPerRow,omitempty"`
}

func (x *RBPairingRequest) Reset() {
	*x = RBPairingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBPairingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBPairingRequest) ProtoMessage() {}

func (x *RBPairingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBPairingRequest.ProtoReflect.Descriptor instead.
func (*RBPairingRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{8}
}

func (x *RBPairingRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RBPairingRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RBPairingRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RBPairingRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RBPairingRequest) GetTimestampRecieved() int64 {
	if x != nil {
		return x.TimestampRecieved
	}
	return 0
}

func (x *RBPairingRequest) GetTimestampPending() int64 {
	if x != nil {
		return x.TimestampPending
	}
	return 0
}

func (x *RBPairingRequest) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *RBPairingRequest) GetLedsPerRow() int32 {
	if x != nil {
		return x.LedsPerRow
	}
	return 0
}

type RBPairingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RBPairingResponse) Reset() {
	*x = RBPairingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBPairingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBPairingResponse) ProtoMessage() {}

func (x *RBPairingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBPairingResponse.ProtoReflect.Descriptor instead.
func (*RBPairingResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{9}
}

func (x *RBPairingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RBPairingResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppGetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AppGetDevicesRequest) Reset() {
	*x = AppGetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetDevicesRequest) ProtoMessage() {}

func (x *AppGetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetDevicesRequest.ProtoReflect.Descriptor instead.
func (*AppGetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{10}
}

func (x *AppGetDevicesRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppGetDevicesRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type AppGetDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *AppGetDevicesResponse) Reset() {
	*x = AppGetDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetDevicesResponse) ProtoMessage() {}

func (x *AppGetDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetDevicesResponse.ProtoReflect.Descriptor instead.
func (*AppGetDevicesResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{11}
}

func (x *AppGetDevicesResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	User       string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	PairingId  string `protobuf:"bytes,5,opt,name=pairingId,proto3" json:"pairingId,omitempty"`
	Rows       int32  `protobuf:"varint,6,opt,name=rows,proto3" json:"rows,omitempty"`
	LedsPerRow int32  `protobuf:"varint,7,opt,name=ledsPerRow,proto3" json:"ledsPerRow,omitempty"`
	Status     string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Active     bool   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{12}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Device) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Device) GetPairingId() string {
	if x != nil {
		return x.PairingId
	}
	return ""
}

func (x *Device) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *Device) GetLedsPerRow() int32 {
	if x != nil {
		return x.LedsPerRow
	}
	return 0
}

func (x *Device) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Device) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type AppPairingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserMail string  `protobuf:"bytes,2,opt,name=userMail,proto3" json:"userMail,omitempty"`
	Device   *Device `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AppPairingRequest) Reset() {
	*x = AppPairingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPairingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPairingRequest) ProtoMessage() {}

func (x *AppPairingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPairingRequest.ProtoReflect.Descriptor instead.
func (*AppPairingRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{13}
}

func (x *AppPairingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AppPairingRequest) GetUserMail() string {
	if x != nil {
		return x.UserMail
	}
	return ""
}

func (x *AppPairingRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type AppPairingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AppPairingResponse) Reset() {
	*x = AppPairingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPairingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPairingResponse) ProtoMessage() {}

func (x *AppPairingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPairingResponse.ProtoReflect.Descriptor instead.
func (*AppPairingResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{14}
}

func (x *AppPairingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeviceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State  string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Colour *RGB   `protobuf:"bytes,3,opt,name=colour,proto3" json:"colour,omitempty"`
	New    bool   `protobuf:"varint,4,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *DeviceControl) Reset() {
	*x = DeviceControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceControl) ProtoMessage() {}

func (x *DeviceControl) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceControl.ProtoReflect.Descriptor instead.
func (*DeviceControl) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{15}
}

func (x *DeviceControl) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceControl) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DeviceControl) GetColour() *RGB {
	if x != nil {
		return x.Colour
	}
	return nil
}

func (x *DeviceControl) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

type GetDeviceControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *GetDeviceControlRequest) Reset() {
	*x = GetDeviceControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceControlRequest) ProtoMessage() {}

func (x *GetDeviceControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceControlRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceControlRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{16}
}

func (x *GetDeviceControlRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GetDeviceControlRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetDeviceControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        string         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DeviceControl *DeviceControl `protobuf:"bytes,2,opt,name=deviceControl,proto3" json:"deviceControl,omitempty"`
}

func (x *GetDeviceControlResponse) Reset() {
	*x = GetDeviceControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceControlResponse) ProtoMessage() {}

func (x *GetDeviceControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceControlResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceControlResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{17}
}

func (x *GetDeviceControlResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDeviceControlResponse) GetDeviceControl() *DeviceControl {
	if x != nil {
		return x.DeviceControl
	}
	return nil
}

type SetDeviceControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string         `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	DeviceControl *DeviceControl `protobuf:"bytes,2,opt,name=deviceControl,proto3" json:"deviceControl,omitempty"`
}

func (x *SetDeviceControlRequest) Reset() {
	*x = SetDeviceControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceControlRequest) ProtoMessage() {}

func (x *SetDeviceControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceControlRequest.ProtoReflect.Descriptor instead.
func (*SetDeviceControlRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{18}
}

func (x *SetDeviceControlRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SetDeviceControlRequest) GetDeviceControl() *DeviceControl {
	if x != nil {
		return x.DeviceControl
	}
	return nil
}

type SetDeviceControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetDeviceControlResponse) Reset() {
	*x = SetDeviceControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceControlResponse) ProtoMessage() {}

func (x *SetDeviceControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceControlResponse.ProtoReflect.Descriptor instead.
func (*SetDeviceControlResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{19}
}

func (x *SetDeviceControlResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeviceConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeviceConnectionRequest) Reset() {
	*x = DeviceConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectionRequest) ProtoMessage() {}

func (x *DeviceConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnectionRequest.ProtoReflect.Descriptor instead.
func (*DeviceConnectionRequest) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{20}
}

func (x *DeviceConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeviceConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action        string         `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	DeviceControl *DeviceControl `protobuf:"bytes,2,opt,name=deviceControl,proto3" json:"deviceControl,omitempty"`
	Animation     *Animation     `protobuf:"bytes,3,opt,name=animation,proto3" json:"animation,omitempty"`
}

func (x *DeviceConnectionResponse) Reset() {
	*x = DeviceConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leds_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectionResponse) ProtoMessage() {}

func (x *DeviceConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leds_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnectionResponse.ProtoReflect.Descriptor instead.
func (*DeviceConnectionResponse) Descriptor() ([]byte, []int) {
	return file_leds_proto_rawDescGZIP(), []int{21}
}

func (x *DeviceConnectionResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DeviceConnectionResponse) GetDeviceControl() *DeviceControl {
	if x != nil {
		return x.DeviceControl
	}
	return nil
}

func (x *DeviceConnectionResponse) GetAnimation() *Animation {
	if x != nil {
		return x.Animation
	}
	return nil
}

var File_leds_proto protoreflect.FileDescriptor

var file_leds_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x65,
	0x64, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x52,
	0x47, 0x42, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x65, 0x64, 0x73,
	0x2e, 0x52, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x04, 0x75, 0x70, 0x4f, 0x4e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c,
	0x65, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x75, 0x70, 0x4f, 0x4e, 0x12, 0x20,
	0x0a, 0x05, 0x75, 0x70, 0x4f, 0x46, 0x46, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6c, 0x65, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x75, 0x70, 0x4f, 0x46, 0x46,
	0x12, 0x22, 0x0a, 0x06, 0x64, 0x6f, 0x77, 0x6e, 0x4f, 0x4e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x06, 0x64, 0x6f,
	0x77, 0x6e, 0x4f, 0x4e, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x4f, 0x46, 0x46, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x4f, 0x46, 0x46, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e,
	0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x22, 0x33, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x44, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0x44, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0x39, 0x0a,
	0x07, 0x52, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x03, 0x52, 0x47, 0x42, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x10,
	0x52, 0x42, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65,
	0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x64, 0x73, 0x50, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x22, 0x3b, 0x0a, 0x11, 0x52, 0x42, 0x50, 0x61, 0x69, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0x3f, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x65, 0x64, 0x73,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0xd6, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x69, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x64,
	0x73, 0x50, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c,
	0x65, 0x64, 0x73, 0x50, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x6d, 0x0a, 0x11, 0x41, 0x70, 0x70,
	0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x69, 0x6c, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x50,
	0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6c, 0x65, 0x64, 0x73, 0x2e, 0x52, 0x47, 0x42, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e,
	0x65, 0x77, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x68, 0x0a, 0x17,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x32, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2d, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xf3, 0x05, 0x0a, 0x0e, 0x44, 0x6f, 0x64, 0x6f, 0x6c, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x42, 0x50, 0x61, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x52, 0x42, 0x50, 0x61,
	0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c,
	0x65, 0x64, 0x73, 0x2e, 0x52, 0x42, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x65,
	0x64, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x65,
	0x64, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x50,
	0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x6c, 0x65, 0x64, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x55, 0x6e, 0x70, 0x61, 0x69,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0c, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x18, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x64, 0x73,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x65, 0x64, 0x73, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_leds_proto_rawDescOnce sync.Once
	file_leds_proto_rawDescData = file_leds_proto_rawDesc
)

func file_leds_proto_rawDescGZIP() []byte {
	file_leds_proto_rawDescOnce.Do(func() {
		file_leds_proto_rawDescData = protoimpl.X.CompressGZIP(file_leds_proto_rawDescData)
	})
	return file_leds_proto_rawDescData
}

var file_leds_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_leds_proto_goTypes = []interface{}{
	(*Animation)(nil),                 // 0: leds.Animation
	(*RegisterAnimationResponse)(nil), // 1: leds.RegisterAnimationResponse
	(*GetAnimationRequest)(nil),       // 2: leds.GetAnimationRequest
	(*GetAnimationResponse)(nil),      // 3: leds.GetAnimationResponse
	(*Step)(nil),                      // 4: leds.Step
	(*PositionColour)(nil),            // 5: leds.PositionColour
	(*RowMeta)(nil),                   // 6: leds.RowMeta
	(*RGB)(nil),                       // 7: leds.RGB
	(*RBPairingRequest)(nil),          // 8: leds.RBPairingRequest
	(*RBPairingResponse)(nil),         // 9: leds.RBPairingResponse
	(*AppGetDevicesRequest)(nil),      // 10: leds.AppGetDevicesRequest
	(*AppGetDevicesResponse)(nil),     // 11: leds.AppGetDevicesResponse
	(*Device)(nil),                    // 12: leds.Device
	(*AppPairingRequest)(nil),         // 13: leds.AppPairingRequest
	(*AppPairingResponse)(nil),        // 14: leds.AppPairingResponse
	(*DeviceControl)(nil),             // 15: leds.DeviceControl
	(*GetDeviceControlRequest)(nil),   // 16: leds.GetDeviceControlRequest
	(*GetDeviceControlResponse)(nil),  // 17: leds.GetDeviceControlResponse
	(*SetDeviceControlRequest)(nil),   // 18: leds.SetDeviceControlRequest
	(*SetDeviceControlResponse)(nil),  // 19: leds.SetDeviceControlResponse
	(*DeviceConnectionRequest)(nil),   // 20: leds.DeviceConnectionRequest
	(*DeviceConnectionResponse)(nil),  // 21: leds.DeviceConnectionResponse
}
var file_leds_proto_depIdxs = []int32{
	7,  // 0: leds.Animation.colours:type_name -> leds.RGB
	6,  // 1: leds.Animation.meta:type_name -> leds.RowMeta
	4,  // 2: leds.Animation.upON:type_name -> leds.Step
	4,  // 3: leds.Animation.upOFF:type_name -> leds.Step
	4,  // 4: leds.Animation.downON:type_name -> leds.Step
	4,  // 5: leds.Animation.downOFF:type_name -> leds.Step
	0,  // 6: leds.GetAnimationResponse.animation:type_name -> leds.Animation
	5,  // 7: leds.Step.positionColour:type_name -> leds.PositionColour
	12, // 8: leds.AppGetDevicesResponse.devices:type_name -> leds.Device
	12, // 9: leds.AppPairingRequest.device:type_name -> leds.Device
	7,  // 10: leds.DeviceControl.colour:type_name -> leds.RGB
	15, // 11: leds.GetDeviceControlResponse.deviceControl:type_name -> leds.DeviceControl
	15, // 12: leds.SetDeviceControlRequest.deviceControl:type_name -> leds.DeviceControl
	15, // 13: leds.DeviceConnectionResponse.deviceControl:type_name -> leds.DeviceControl
	0,  // 14: leds.DeviceConnectionResponse.animation:type_name -> leds.Animation
	8,  // 15: leds.DodoledService.RBPairing:input_type -> leds.RBPairingRequest
	10, // 16: leds.DodoledService.AppGetPotentialDevices:input_type -> leds.AppGetDevicesRequest
	10, // 17: leds.DodoledService.AppGetPairedDevices:input_type -> leds.AppGetDevicesRequest
	13, // 18: leds.DodoledService.AppPairing:input_type -> leds.AppPairingRequest
	2,  // 19: leds.DodoledService.GetAnimation:input_type -> leds.GetAnimationRequest
	0,  // 20: leds.DodoledService.RegisterAnimation:input_type -> leds.Animation
	12, // 21: leds.DodoledService.UnpairDevice:input_type -> leds.Device
	16, // 22: leds.DodoledService.GetDeviceControl:input_type -> leds.GetDeviceControlRequest
	18, // 23: leds.DodoledService.SetDeviceControl:input_type -> leds.SetDeviceControlRequest
	20, // 24: leds.DodoledService.DeviceConnection:input_type -> leds.DeviceConnectionRequest
	9,  // 25: leds.DodoledService.RBPairing:output_type -> leds.RBPairingResponse
	11, // 26: leds.DodoledService.AppGetPotentialDevices:output_type -> leds.AppGetDevicesResponse
	11, // 27: leds.DodoledService.AppGetPairedDevices:output_type -> leds.AppGetDevicesResponse
	14, // 28: leds.DodoledService.AppPairing:output_type -> leds.AppPairingResponse
	3,  // 29: leds.DodoledService.GetAnimation:output_type -> leds.GetAnimationResponse
	1,  // 30: leds.DodoledService.RegisterAnimation:output_type -> leds.RegisterAnimationResponse
	14, // 31: leds.DodoledService.UnpairDevice:output_type -> leds.AppPairingResponse
	17, // 32: leds.DodoledService.GetDeviceControl:output_type -> leds.GetDeviceControlResponse
	19, // 33: leds.DodoledService.SetDeviceControl:output_type -> leds.SetDeviceControlResponse
	21, // 34: leds.DodoledService.DeviceConnection:output_type -> leds.DeviceConnectionResponse
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_leds_proto_init() }
func file_leds_proto_init() {
	if File_leds_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_leds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Animation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAnimationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnimationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnimationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionColour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RGB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBPairingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBPairingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppGetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppGetDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPairingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPairingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leds_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_leds_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_leds_proto_goTypes,
		DependencyIndexes: file_leds_proto_depIdxs,
		MessageInfos:      file_leds_proto_msgTypes,
	}.Build()
	File_leds_proto = out.File
	file_leds_proto_rawDesc = nil
	file_leds_proto_goTypes = nil
	file_leds_proto_depIdxs = nil
}
